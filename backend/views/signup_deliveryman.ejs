
    <%- include('partials/common_header'); %>
  <body class="h-full bg-white dark:bg-slate-900">
    <!-- register as Delivery Man -->
    <div class="isolate px-6 py-24 sm:py-32 lg:px-8">
      <div class="flex min-h-full flex-col justify-center">
        <div class="sm:mx-auto sm:w-full sm:max-w-sm">
          <div
            class="mx-auto h-20 w-20 bg-[url('./img/logo.png')] dark:bg-[url('./img/logo-dark.png')] bg-cover"
          ></div>
          <!-- <img
            class="mx-auto h-20 w-auto"
            src="./img/logo-dark.png"
            alt="Your Company"
          /> -->
          <h2
            class="mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900 dark:text-transparent dark:bg-clip-text dark:bg-gradient-to-r dark:from-indigo-200 dark:to-purple-500"
          >
            Register as Delivery Man
          </h2>
        </div>
      </div>
      <form id="dmregistrationForm" action="/signup/deliveryman/" method="POST" class="mx-auto mt-10 max-w-xl sm:mt-10">
        <div class="grid grid-cols-1 gap-x-8 gap-y-6 sm:grid-cols-2">
          <div class="sm:col-span-2">
            <label
              for="username"
              class="block text-sm font-semibold leading-6 text-gray-900 dark:text-indigo-200"
              >Username</label
            >
            <div class="mt-2.5">
              <input
                type="text"
                name="username"
                id="username"
                placeholder="Username"
                class="block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
              />
            </div>
          </div>
          <div>
            <label
              for="password"
              class="block text-sm font-semibold leading-6 text-gray-900 dark:text-indigo-200"
              >Password</label
            >
            <div class="mt-2.5">
              <input
                type="password"
                name="password"
                id="password"
                placeholder="Password"
                class="block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
              />
            </div>
          </div>
          <div>
            <label
              for="confirmPassword"
              class="block text-sm font-semibold leading-6 text-gray-900 dark:text-indigo-200"
              >Confirm Password</label
            >
            <div class="mt-2.5">
              <input
                type="password"
                name="confirmPassword"
                id="confirmPassword"
                placeholder="Confirm Password"
                class="block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
              />
            </div>
          </div>
          <div>
            <label
              for="email"
              class="block text-sm font-semibold leading-6 text-gray-900 dark:text-indigo-200"
              >Email</label
            >
            <div class="mt-2.5">
              <input
                type="email"
                name="email"
                id="email"
                placeholder="Email"
                class="block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
              />
            </div>
          </div>
          <div>
            <label
              for="phone"
              class="block text-sm font-semibold leading-6 text-gray-900 dark:text-indigo-200"
              >Phone</label
            >
            <div class="mt-2.5">
              <input
                type="text"
                name="phone"
                id="phone"
                placeholder="Phone"
                class="block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
              />
            </div>
          </div>
          <div class="sm:col-span-2">
            <label
              for="nid"
              class="block text-sm font-semibold leading-6 text-gray-900 dark:text-indigo-200"
              >National Identity</label
            >
            <div class="mt-2.5">
              <input
                type="text"
                name="nid"
                id="nid"
                placeholder="National Identity"
                class="block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
              />
            </div>
          </div>
          <!-- House Address -->
          <div class="sm:col-span-2">
            <label
              for="address"
              class="block text-sm font-semibold leading-6 text-gray-900 dark:text-indigo-200"
              >Address</label
            >
            <div class="mt-2.5">
              <input
                type="text"
                name="address"
                id="address"
                placeholder="House, Road, City, State"
                class="block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
              />
            </div>
          </div>
        </div>
        <div class="mt-10">
          <button
            type="submit"
            class="block w-full rounded-md bg-indigo-600 px-3.5 py-2.5 text-center text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 dark:bg-violet-600 dark:text-wite dark:hover:text-slate-800 dark:hover:bg-violet-400"
          >
            Register
          </button>
        </div>
        <div class="mt-10">
          <p class="mt-10 text-center text-sm text-gray-500">
            Already Registered?
            <a
              href="/login/"
              class="font-semibold leading-6 text-indigo-600 hover:text-indigo-500 dark:text-transparent dark:bg-clip-text dark:bg-gradient-to-r dark:from-green-200 dark:to-teal-400 dark:hover:text-green-200"
              >Login</a
            >
          </p>
          <p class="mt-10 text-center text-sm text-gray-500">
            Don't want to sign up as Deliveryman?
            <a
              href="/signup/"
              class="font-semibold leading-6 text-indigo-600 hover:text-indigo-500 dark:text-transparent dark:bg-clip-text dark:bg-gradient-to-r dark:from-green-200 dark:to-teal-400 dark:hover:text-green-200"
              >Sign Up differently</a
            >
          </p>
        </div>
      </form>
    </div>


    <%- include('partials/common_scripts'); %>

    <script>
      $(document).ready(function () {
       
       //When form submit button is pressed --> call function 
       $("#dmregistrationForm").submit(function (e) {
          dmSignUpFormSubmitHandler(e, $(this));
        });

        // When seller registration function
        function dmSignUpFormSubmitHandler(e, formObj) {
          e.preventDefault();
          e.stopPropagation();

          var form = formObj;
          var url = form.attr("action");
          $.ajax({
            type: "POST",
            url: url,
            data: form.serialize(),
            success: function (data) {
              // Ajax call completed successfully
              if (data.code == 200) {
                addDMToChain(data.data);
              }
            },
            error: function (data) {
              // Some error in ajax call
              alert("some Error from DM AJAX request");
            },
          });
        }

        
        async function addDMToChain(dm) {
          console.log(dm);
          // Check if Metamask is available
          if (typeof window.ethereum !== "undefined") {
            const provider = new ethers.providers.Web3Provider(window.ethereum);

            try {
              await window.ethereum.request({
                method: "eth_requestAccounts",
              });
            } catch (error) {
              console.error("Permission denied:", error);
            }
            // Create a contract instance
            const contractAddress = "<%=process.env.ECMART_CONTRACT_ADDRESS%>";
            //AJAX Call to Get ABI
            var url = "/abi/get/facetAbi/<%=process.env.CHAIN_REGISTRATION_FACET_NAME%>/";
            $.ajax({
            type: "GET",
            url: url,
            success: function (abi) {
              
                const contractAbi = abi;
                add(contractAddress,contractAbi,provider, dm);
              
            },
            error: function (data) {
              // Some error in ajax call
              alert("some Error from ABI AJAX request");
            },
          });
         
         
          } else {
            // Metamask is not available
            console.error("Metamask is not installed or not available.");
          }
        }

        async function add(contractAddress,contractAbi,provider, dm){
          try{
            const contract = new ethers.Contract(
           contractAddress,
           contractAbi,
           provider.getSigner()
         );
        
         const result = await contract.registerDeliveryMan(dm.id);
         await result.wait(1);
         console.log(result);
         alert("Registration SUCCESSFUL !!");
              window.location.href = window.location.href;
        }
            catch(e){
              console.log(e.message);
              alert(e.reason);
            }


          }
           

      });

      //  =========================================== IMPORTANT ===================================================================
      // After registration from Blockchain, it emits an event with ---->  `registrationAddress`, `dbID`
      // The event is listened on the backend using    -------->>>>>>>>>    backend/services/registrationChainService.js    <<<<<<<<<<---------------------
      // Then it backend MySQL DB is upadted with `registrationAddress` with corresponding `dbID`
    </script>
  </body>
</html>
